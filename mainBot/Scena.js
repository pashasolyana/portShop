const { Scenes, Markup } = require("telegraf");
const axios = require("axios");
/*
Markup.keyboard([
                ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü", "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò"],
                ["–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï", "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶"],
                ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
            ]).resize())
*/

class ScenesGenerator {
  CostEntryScene() {
    const entry = new Scenes.BaseScene("entry");
    entry.enter(async (ctx) => {
      await ctx.reply(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞",
        Markup.keyboard([
          ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü"],
          ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
        ]).resize()
      );
    });
    entry.on("text", async (ctx) => {
      console.log(ctx.message.text);
      if (ctx.message.text == "–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü") {
        ctx.scene.enter("shoes");
      } else if (ctx.message.text == "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò") {
        ctx.scene.enter("pants");
      } else if (ctx.message.text == "–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï") {
        ctx.scene.enter("tshirt");
      } else if (ctx.message.text == "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶") {
        ctx.scene.enter("socks");
      } else if (ctx.message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥") {
        await ctx.reply(
          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
          Markup.keyboard([
            ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
            ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
            ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
          ]).resize()
        );
        await ctx.scene.leave();
      } else {
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤.");
      }
    });
    return entry;
  }

  costShoesScene() {
    const shoes = new Scenes.BaseScene("shoes");
    shoes.enter(async (ctx) => {
      ctx.replyWithPhoto(
        { source: "./pics/clothes.jpg" },
        {
          caption:
            "¬≠–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä –≤ ¬•. –ù–∞—à –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã.\n\n‚ùóÔ∏è<b><em>–í–ù–ò–ú–ê–ù–ò–ï</em></b>‚ùóÔ∏è–í—ã–±–∏—Ä–∞–π —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–∞—è <b><em>–ó–ê–ß–ï–†–ö–ù–£–¢–ê</em></b> –Ω–∞ –±–∏—Ä—é–∑–æ–≤–æ–π –∫–Ω–æ–ø–∫–µ. –°–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –£ –Ω–∞—Å —ç—Ç–∏—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç",
          parse_mode: "HTML",
        },
        Markup.keyboard([
          ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü", "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò"],
          ["–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï", "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶"],
          ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
        ]).resize()
      );
    });
    shoes.on("text", async (ctx) => {
      console.log(ctx.message.text);
      if (ctx.message.text == "–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü") {
        ctx.scene.enter("shoes");
      } else if (ctx.message.text == "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò") {
        ctx.scene.enter("pants");
      } else if (ctx.message.text == "–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï") {
        ctx.scene.enter("tshirt");
      } else if (ctx.message.text == "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶") {
        ctx.scene.enter("socks");
      } else if (ctx.message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥") {
        await ctx.reply(
          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
          Markup.keyboard([
            ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
            ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
            ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
          ]).resize()
        );
        await ctx.scene.leave();
      } else {
        let userValue = ctx.message.text;
        if (!Number(userValue)) {
          await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.");
        } else {
          const res = await axios.get(
            "https://www.cbr-xml-daily.ru/daily_json.js"
          );
          let CNY = res.data.Valute.CNY.Value * 1.1;
          let resultValue = Number(userValue) * Number(CNY) + 2150;
          await ctx.reply(
            `üí∏–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–∏—Ç : ${resultValue.toFixed(
              0
            )} ‚ÇΩüí∏\n\n –ö—É—Ä—Å ¬• - ${CNY.toFixed(
              1
            )} ‚ÇΩ \n\n *–í –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –∫–æ–º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.`
          );
          await ctx.replyWithHTML(
            "–ì–æ—Ç–æ–≤ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?\n\n–ü–∏—à–∏ —Å—é–¥–∞ @PortShop_Admin\n\n –≠—Ç–æ —á–∞—Ç —Å –Ω–∞—à–∏–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏.\n\n –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä + —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Ä–∞–∑–º–µ—Ä –∏ –Ω–∞–ø–∏—Å–∞—Ç—å ¬´—Ö–æ—á—É –∫—É–ø–∏—Ç—å¬ª\n\n ‚ùóÔ∏è‚ùóÔ∏è–û–ë–†–ê–¢–ò –í–ù–ò–ú–ê–ù–ò–ï‚ùóÔ∏è‚ùóÔ∏è\n\n –í—Å–µ –∑–∞–∫–∞–∑—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç @PortShop_Admin"
          );
          await ctx.reply(
            "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
            Markup.keyboard([
              ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
              ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
              ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
            ]).resize()
          );
          await ctx.scene.leave();
        }
      }
    });
    return shoes;
  }

  costPantsScene() {
    const pants = new Scenes.BaseScene("pants");
    pants.enter(async (ctx) => {
      ctx.replyWithPhoto(
        { source: "./pics/clothes.jpg" },
        {
          caption:
            "¬≠–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä –≤ ¬•. –ù–∞—à –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã.\n\n‚ùóÔ∏è<b><em>–í–ù–ò–ú–ê–ù–ò–ï</em></b>‚ùóÔ∏è–í—ã–±–∏—Ä–∞–π —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–∞—è <b><em>–ó–ê–ß–ï–†–ö–ù–£–¢–ê</em></b> –Ω–∞ –±–∏—Ä—é–∑–æ–≤–æ–π –∫–Ω–æ–ø–∫–µ. –°–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –£ –Ω–∞—Å —ç—Ç–∏—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç",
          parse_mode: "HTML",
        },
        Markup.keyboard([
          ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü", "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò"],
          ["–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï", "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶"],
          ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
        ]).resize()
      );
    });
    pants.on("text", async (ctx) => {
      console.log(ctx.message.text);
      if (ctx.message.text == "–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü") {
        ctx.scene.enter("shoes");
      } else if (ctx.message.text == "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò") {
        ctx.scene.enter("pants");
      } else if (ctx.message.text == "–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï") {
        ctx.scene.enter("tshirt");
      } else if (ctx.message.text == "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶") {
        ctx.scene.enter("socks");
      } else if (ctx.message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥") {
        await ctx.reply(
          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
          Markup.keyboard([
            ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
            ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
            ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
          ]).resize()
        );
        await ctx.scene.leave();
      } else {
        let userValue = ctx.message.text;
        if (!Number(userValue)) {
          await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.");
        } else {
          await ctx.reply(
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
            Markup.keyboard([
              ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
              ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
              ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
            ]).resize()
          );
          await ctx.scene.leave();
        }
      }
    });
    return pants;
  }

  costTshirtScene() {
    const tshirt = new Scenes.BaseScene("tshirt");
    tshirt.enter(async (ctx) => {
      ctx.replyWithPhoto(
        { source: "./pics/clothes.jpg" },
        {
          caption:
            "¬≠–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä –≤ ¬•. –ù–∞—à –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã.\n\n‚ùóÔ∏è<b><em>–í–ù–ò–ú–ê–ù–ò–ï</em></b>‚ùóÔ∏è–í—ã–±–∏—Ä–∞–π —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–∞—è <b><em>–ó–ê–ß–ï–†–ö–ù–£–¢–ê</em></b> –Ω–∞ –±–∏—Ä—é–∑–æ–≤–æ–π –∫–Ω–æ–ø–∫–µ. –°–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –£ –Ω–∞—Å —ç—Ç–∏—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç",
          parse_mode: "HTML",
        },
        Markup.keyboard([
          ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü", "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò"],
          ["–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï", "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶"],
          ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
        ]).resize()
      );
    });
    tshirt.on("text", async (ctx) => {
      console.log(ctx.message.text);
      if (ctx.message.text == "–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü") {
        ctx.scene.enter("shoes");
      } else if (ctx.message.text == "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò") {
        ctx.scene.enter("pants");
      } else if (ctx.message.text == "–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï") {
        ctx.scene.enter("tshirt");
      } else if (ctx.message.text == "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶") {
        ctx.scene.enter("socks");
      } else if (ctx.message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥") {
        await ctx.reply(
          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
          Markup.keyboard([
            ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
            ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
            ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
          ]).resize()
        );
        await ctx.scene.leave();
      } else {
        let userValue = ctx.message.text;
        if (!Number(userValue)) {
          await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.");
        } else {
          await ctx.reply(
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
            Markup.keyboard([
              ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
              ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
              ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
            ]).resize()
          );
          await ctx.scene.leave();
        }
      }
    });
    return tshirt;
  }

  costSocksScene() {
    const socks = new Scenes.BaseScene("socks");
    socks.enter(async (ctx) => {
      console.log("socks");
      ctx.replyWithPhoto(
        { source: "./pics/clothes.jpg" },
        {
          caption:
            "¬≠–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä –≤ ¬•. –ù–∞—à –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –ú–æ—Å–∫–≤—ã.\n\n‚ùóÔ∏è<b><em>–í–ù–ò–ú–ê–ù–ò–ï</em></b>‚ùóÔ∏è–í—ã–±–∏—Ä–∞–π —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä–∞—è <b><em>–ó–ê–ß–ï–†–ö–ù–£–¢–ê</em></b> –Ω–∞ –±–∏—Ä—é–∑–æ–≤–æ–π –∫–Ω–æ–ø–∫–µ. –°–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –£ –Ω–∞—Å —ç—Ç–∏—Ö —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç",
          parse_mode: "HTML",
        },
        Markup.keyboard([
          ["–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü", "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò"],
          ["–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï", "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶"],
          ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"],
        ]).resize()
      );
    });
    socks.on("text", async (ctx) => {
      console.log(ctx.message.text);
      if (ctx.message.text == "–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞  üëü") {
        ctx.scene.enter("shoes");
      } else if (ctx.message.text == "–¢–æ–ª—Å—Ç–æ–≤–∫–∏/–®—Ç–∞–Ω—ã  üëò") {
        ctx.scene.enter("pants");
      } else if (ctx.message.text == "–§—É—Ç–±–æ–ª–∫–∞/–®–æ—Ä—Ç—ã  üëï") {
        ctx.scene.enter("tshirt");
      } else if (ctx.message.text == "–ù–æ—Å–∫–∏/–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ  üß¶") {
        ctx.scene.enter("socks");
      } else if (ctx.message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥") {
        await ctx.reply(
          "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
          Markup.keyboard([
            ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
            ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
            ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
          ]).resize()
        );
        await ctx.scene.leave();
      } else {
        let userValue = ctx.message.text;
        if (!Number(userValue)) {
          await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.");
        } else {
          await ctx.reply(
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
            Markup.keyboard([
              ["–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω üí¥"],
              ["–ö—É—Ä—Å üíπ", "–û—Ç–∑—ã–≤—ã ü•á"],
              ["–í—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å ü§ì", "–°–≤—è–∑—å —Å –Ω–∞–º–∏ ü§ù"],
            ]).resize()
          );
          await ctx.scene.leave();
        }
      }
    });
    return socks;
  }
}
module.exports = ScenesGenerator;
